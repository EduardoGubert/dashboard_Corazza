{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\OneDrive\\\\Documentos\\\\Projetos\\\\PROJETOS\\\\dashboard_Corazza\\\\dashboard-supabase\\\\src\\\\components\\\\Charts\\\\BrokerChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../../services/supabase';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BrokerChart = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Leads por Corretor',\n      data: [],\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log('📊 Buscando dados de corretores...');\n        const {\n          data: leadsData,\n          error\n        } = await supabase.from('Cadastro_Clientes').select('corretor_responsavel').not('corretor_responsavel', 'is', null);\n        if (error) {\n          console.error('❌ Error fetching data:', error);\n          setError(error.message);\n          return;\n        }\n        console.log('✅ Dados recebidos:', leadsData);\n\n        // Agrupar dados manualmente\n        const grouped = leadsData === null || leadsData === void 0 ? void 0 : leadsData.reduce((acc, item) => {\n          const corretor = item.corretor_responsavel || 'Sem Corretor';\n          if (!acc[corretor]) {\n            acc[corretor] = 0;\n          }\n          acc[corretor]++;\n          return acc;\n        }, {});\n        const brokerData = Object.entries(grouped || {}).map(([corretor_responsavel, count]) => ({\n          corretor_responsavel,\n          count: count\n        }));\n        const labels = brokerData.map(item => item.corretor_responsavel);\n        const counts = brokerData.map(item => item.count);\n        console.log('📈 Labels:', labels);\n        console.log('📈 Counts:', counts);\n        setData({\n          labels,\n          datasets: [{\n            label: 'Leads por Corretor',\n            data: counts,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        });\n      } catch (err) {\n        console.error('❌ Erro ao processar dados:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Realtime subscription com nova sintaxe do Supabase v2\n    const channel = supabase.channel('broker-changes').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'Cadastro_Clientes'\n    }, () => {\n      console.log('🔄 Novo lead inserido, atualizando gráfico de corretores...');\n      fetchData();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Leads por Corretor Responsável'\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Carregando dados...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"font-bold\",\n        children: \"Erro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block sm:inline\",\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4 text-gray-700\",\n      children: \"Contagem de Leads por Corretor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(BrokerChart, \"TPmeYsXjO1Lctd5u7ykGKuBIcos=\");\n_c = BrokerChart;\nexport default BrokerChart;\nvar _c;\n$RefreshReg$(_c, \"BrokerChart\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Bar","jsxDEV","_jsxDEV","BrokerChart","_s","loading","setLoading","error","setError","data","setData","labels","datasets","label","backgroundColor","borderColor","borderWidth","fetchData","console","log","leadsData","from","select","not","message","grouped","reduce","acc","item","corretor","corretor_responsavel","brokerData","Object","entries","map","count","counts","err","channel","on","event","schema","table","subscribe","removeChannel","options","responsive","maintainAspectRatio","scales","y","beginAtZero","ticks","stepSize","plugins","legend","display","position","title","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eduar/OneDrive/Documentos/Projetos/PROJETOS/dashboard_Corazza/dashboard-supabase/src/components/Charts/BrokerChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { supabase } from '../../services/supabase';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { ChartData, ChartOptions } from 'chart.js';\r\n\r\ninterface BrokerData {\r\n    corretor_responsavel: string;\r\n    count: number;\r\n}\r\n\r\nconst BrokerChart: React.FC = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [data, setData] = useState<ChartData<'bar'>>({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Leads por Corretor',\r\n                data: [],\r\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n                console.log('📊 Buscando dados de corretores...');\r\n                \r\n                const { data: leadsData, error } = await supabase\r\n                    .from('Cadastro_Clientes')\r\n                    .select('corretor_responsavel')\r\n                    .not('corretor_responsavel', 'is', null);\r\n\r\n                if (error) {\r\n                    console.error('❌ Error fetching data:', error);\r\n                    setError(error.message);\r\n                    return;\r\n                }\r\n\r\n                console.log('✅ Dados recebidos:', leadsData);\r\n\r\n                // Agrupar dados manualmente\r\n                const grouped = leadsData?.reduce((acc: Record<string, number>, item: any) => {\r\n                    const corretor = item.corretor_responsavel || 'Sem Corretor';\r\n                    if (!acc[corretor]) {\r\n                        acc[corretor] = 0;\r\n                    }\r\n                    acc[corretor]++;\r\n                    return acc;\r\n                }, {});\r\n\r\n                const brokerData: BrokerData[] = Object.entries(grouped || {}).map(([corretor_responsavel, count]) => ({\r\n                    corretor_responsavel,\r\n                    count: count as number\r\n                }));\r\n\r\n                const labels = brokerData.map((item: BrokerData) => item.corretor_responsavel);\r\n                const counts = brokerData.map((item: BrokerData) => item.count);\r\n\r\n                console.log('📈 Labels:', labels);\r\n                console.log('📈 Counts:', counts);\r\n\r\n                setData({\r\n                    labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Leads por Corretor',\r\n                            data: counts,\r\n                            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n                            borderColor: 'rgba(75, 192, 192, 1)',\r\n                            borderWidth: 1,\r\n                        },\r\n                    ],\r\n                });\r\n            } catch (err: any) {\r\n                console.error('❌ Erro ao processar dados:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n        // Realtime subscription com nova sintaxe do Supabase v2\r\n        const channel = supabase\r\n            .channel('broker-changes')\r\n            .on('postgres_changes', \r\n                { event: 'INSERT', schema: 'public', table: 'Cadastro_Clientes' },\r\n                () => {\r\n                    console.log('🔄 Novo lead inserido, atualizando gráfico de corretores...');\r\n                    fetchData();\r\n                }\r\n            )\r\n            .subscribe();\r\n\r\n        return () => {\r\n            supabase.removeChannel(channel);\r\n        };\r\n    }, []);\r\n\r\n    const options: ChartOptions<'bar'> = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                ticks: {\r\n                    stepSize: 1\r\n                }\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top' as const,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Leads por Corretor Responsável'\r\n            }\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"></div>\r\n                    <p className=\"mt-2 text-gray-600\">Carregando dados...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n                <strong className=\"font-bold\">Erro!</strong>\r\n                <span className=\"block sm:inline\"> {error}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Contagem de Leads por Corretor</h2>\r\n            <Bar data={data} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BrokerChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}