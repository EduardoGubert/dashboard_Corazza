{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\nexport const fetchLeads = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('Cadastro_Clientes').select('empreendimento');\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  // Agrupar dados manualmente no frontend\n  const grouped = data === null || data === void 0 ? void 0 : data.reduce((acc, item) => {\n    const empreendimento = item.empreendimento;\n    if (!acc[empreendimento]) {\n      acc[empreendimento] = 0;\n    }\n    acc[empreendimento]++;\n    return acc;\n  }, {});\n  return Object.entries(grouped || {}).map(([empreendimento, count]) => ({\n    empreendimento,\n    count\n  }));\n};\nexport const fetchSchedules = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('Cadastro_Clientes').select('created_at, agendamentos').order('created_at', {\n    ascending: true\n  });\n  if (error) {\n    throw new Error(error.message);\n  }\n  return data;\n};\nexport const fetchLeadsByBroker = async () => {\n  const {\n    data,\n    error\n  } = await supabase.from('Cadastro_Clientes').select('corretor_responsavel, count(*)').group('corretor_responsavel');\n  if (error) {\n    throw new Error(error.message);\n  }\n  return data;\n};\nexport default supabase;","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","fetchLeads","data","error","from","select","Error","message","grouped","reduce","acc","item","empreendimento","Object","entries","map","count","fetchSchedules","order","ascending","fetchLeadsByBroker","group"],"sources":["C:/Users/eduar/OneDrive/Documentos/Projetos/PROJETOS/dashboard_Corazza/dashboard-supabase/src/services/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL as string;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY as string;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n\r\nexport const fetchLeads = async () => {\r\n    const { data, error } = await supabase\r\n        .from('Cadastro_Clientes')\r\n        .select('empreendimento');\r\n    if (error) {\r\n        throw new Error(error.message);\r\n    }\r\n    \r\n    // Agrupar dados manualmente no frontend\r\n    const grouped = data?.reduce((acc: any, item: any) => {\r\n        const empreendimento = item.empreendimento;\r\n        if (!acc[empreendimento]) {\r\n            acc[empreendimento] = 0;\r\n        }\r\n        acc[empreendimento]++;\r\n        return acc;\r\n    }, {});\r\n    \r\n    return Object.entries(grouped || {}).map(([empreendimento, count]) => ({\r\n        empreendimento,\r\n        count\r\n    }));\r\n};\r\n\r\nexport const fetchSchedules = async () => {\r\n    const { data, error } = await supabase\r\n        .from('Cadastro_Clientes')\r\n        .select('created_at, agendamentos')\r\n        .order('created_at', { ascending: true });\r\n    if (error) {\r\n        throw new Error(error.message);\r\n    }\r\n    return data;\r\n};\r\n\r\nexport const fetchLeadsByBroker = async () => {\r\n    const { data, error } = await supabase\r\n        .from('Cadastro_Clientes')\r\n        .select('corretor_responsavel, count(*)')\r\n        .group('corretor_responsavel');\r\n    if (error) {\r\n        throw new Error(error.message);\r\n    }\r\n    return data;\r\n};\r\n\r\nexport default supabase;"],"mappings":"AAAA,SAASA,YAAY,QAAQ,uBAAuB;AAEpD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAgC;AAChE,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,2BAAqC;AAEzE,OAAO,MAAMC,QAAQ,GAAGP,YAAY,CAACC,WAAW,EAAEI,eAAe,CAAC;AAElE,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACjCI,IAAI,CAAC,mBAAmB,CAAC,CACzBC,MAAM,CAAC,gBAAgB,CAAC;EAC7B,IAAIF,KAAK,EAAE;IACP,MAAM,IAAIG,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC;EAClC;;EAEA;EACA,MAAMC,OAAO,GAAGN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,MAAM,CAAC,CAACC,GAAQ,EAAEC,IAAS,KAAK;IAClD,MAAMC,cAAc,GAAGD,IAAI,CAACC,cAAc;IAC1C,IAAI,CAACF,GAAG,CAACE,cAAc,CAAC,EAAE;MACtBF,GAAG,CAACE,cAAc,CAAC,GAAG,CAAC;IAC3B;IACAF,GAAG,CAACE,cAAc,CAAC,EAAE;IACrB,OAAOF,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAOG,MAAM,CAACC,OAAO,CAACN,OAAO,IAAI,CAAC,CAAC,CAAC,CAACO,GAAG,CAAC,CAAC,CAACH,cAAc,EAAEI,KAAK,CAAC,MAAM;IACnEJ,cAAc;IACdI;EACJ,CAAC,CAAC,CAAC;AACP,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAM;IAAEf,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACjCI,IAAI,CAAC,mBAAmB,CAAC,CACzBC,MAAM,CAAC,0BAA0B,CAAC,CAClCa,KAAK,CAAC,YAAY,EAAE;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EAC7C,IAAIhB,KAAK,EAAE;IACP,MAAM,IAAIG,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC;EAClC;EACA,OAAOL,IAAI;AACf,CAAC;AAED,OAAO,MAAMkB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAM;IAAElB,IAAI;IAAEC;EAAM,CAAC,GAAG,MAAMH,QAAQ,CACjCI,IAAI,CAAC,mBAAmB,CAAC,CACzBC,MAAM,CAAC,gCAAgC,CAAC,CACxCgB,KAAK,CAAC,sBAAsB,CAAC;EAClC,IAAIlB,KAAK,EAAE;IACP,MAAM,IAAIG,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC;EAClC;EACA,OAAOL,IAAI;AACf,CAAC;AAED,eAAeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}