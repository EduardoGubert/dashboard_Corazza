{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\OneDrive\\\\Documentos\\\\Projetos\\\\PROJETOS\\\\dashboard_Corazza\\\\dashboard-supabase\\\\src\\\\components\\\\Charts\\\\SchedulesChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchedulesChart = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [period, setPeriod] = useState('30days');\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Agendamentos Acumulados',\n      data: [],\n      borderColor: 'rgba(153, 102, 255, 1)',\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\n      fill: true\n    }]\n  });\n  const fetchSchedules = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('📊 Buscando dados de agendamentos...');\n\n      // Calcular data inicial baseada no período selecionado\n      let startDate = null;\n      const now = new Date();\n      switch (period) {\n        case '7days':\n          startDate = new Date(now.setDate(now.getDate() - 7));\n          break;\n        case '30days':\n          startDate = new Date(now.setDate(now.getDate() - 30));\n          break;\n        case '90days':\n          startDate = new Date(now.setDate(now.getDate() - 90));\n          break;\n        case 'all':\n        default:\n          startDate = null;\n          break;\n      }\n      let query = supabase.from('Cadastro_Clientes').select('created_at').not('agendamento', 'is', null).order('created_at', {\n        ascending: true\n      });\n\n      // Aplicar filtro de data se necessário\n      if (startDate) {\n        query = query.gte('created_at', startDate.toISOString());\n      }\n      const {\n        data: schedules,\n        error\n      } = await query;\n      if (error) {\n        console.error('❌ Error fetching schedules:', error);\n        setError(error.message);\n        return;\n      }\n      console.log('✅ Dados recebidos:', schedules);\n      if (!schedules || schedules.length === 0) {\n        setData({\n          labels: [],\n          datasets: [{\n            label: 'Agendamentos Acumulados',\n            data: [],\n            borderColor: 'rgba(153, 102, 255, 1)',\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            fill: true\n          }]\n        });\n        return;\n      }\n\n      // Agrupar por data e calcular acumulado\n      const dateMap = {};\n      schedules.forEach(schedule => {\n        const date = new Date(schedule.created_at).toLocaleDateString('pt-BR');\n        dateMap[date] = (dateMap[date] || 0) + 1;\n      });\n\n      // Ordenar as datas\n      const sortedDates = Object.keys(dateMap).sort((a, b) => {\n        const [dayA, monthA, yearA] = a.split('/').map(Number);\n        const [dayB, monthB, yearB] = b.split('/').map(Number);\n        return new Date(yearA, monthA - 1, dayA).getTime() - new Date(yearB, monthB - 1, dayB).getTime();\n      });\n\n      // Calcular valores acumulados\n      let accumulated = 0;\n      const accumulatedValues = sortedDates.map(date => {\n        accumulated += dateMap[date];\n        return accumulated;\n      });\n      console.log('📈 Datas:', sortedDates);\n      console.log('📈 Valores acumulados:', accumulatedValues);\n      setData({\n        labels: sortedDates,\n        datasets: [{\n          label: 'Agendamentos Acumulados',\n          data: accumulatedValues,\n          borderColor: 'rgba(153, 102, 255, 1)',\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          fill: true,\n          tension: 0.4,\n          pointRadius: 4,\n          pointHoverRadius: 6\n        }]\n      });\n    } catch (err) {\n      console.error('❌ Erro ao processar dados:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchSchedules();\n\n    // Realtime subscription com nova sintaxe do Supabase v2\n    const channel = supabase.channel('schedules-changes').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'Cadastro_Clientes'\n    }, () => {\n      console.log('🔄 Novo agendamento inserido, atualizando gráfico...');\n      fetchSchedules();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, [period]); // Recarrega quando o período muda\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Data'\n        },\n        ticks: {\n          maxRotation: 45,\n          minRotation: 45\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Total Acumulado de Agendamentos'\n        },\n        beginAtZero: true,\n        ticks: {\n          stepSize: 1\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Evolução de Agendamentos (Acumulado)'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `Total acumulado: ${context.parsed.y} agendamentos`;\n          }\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Carregando dados...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"font-bold\",\n        children: \"Erro!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block sm:inline\",\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-gray-700\",\n        children: \"Agendamentos ao Longo do Tempo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPeriod('7days'),\n          className: `px-3 py-1 rounded text-sm font-medium transition-colors ${period === '7days' ? 'bg-purple-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: \"7 dias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPeriod('30days'),\n          className: `px-3 py-1 rounded text-sm font-medium transition-colors ${period === '30days' ? 'bg-purple-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: \"30 dias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPeriod('90days'),\n          className: `px-3 py-1 rounded text-sm font-medium transition-colors ${period === '90days' ? 'bg-purple-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: \"90 dias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPeriod('all'),\n          className: `px-3 py-1 rounded text-sm font-medium transition-colors ${period === 'all' ? 'bg-purple-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'}`,\n          children: \"Tudo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n_s(SchedulesChart, \"Gq5ZDGIqTpbQ6DM+6cLO3K/9fJk=\");\n_c = SchedulesChart;\nexport default SchedulesChart;\nvar _c;\n$RefreshReg$(_c, \"SchedulesChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","supabase","jsxDEV","_jsxDEV","SchedulesChart","_s","loading","setLoading","error","setError","period","setPeriod","data","setData","labels","datasets","label","borderColor","backgroundColor","fill","fetchSchedules","console","log","startDate","now","Date","setDate","getDate","query","from","select","not","order","ascending","gte","toISOString","schedules","message","length","dateMap","forEach","schedule","date","created_at","toLocaleDateString","sortedDates","Object","keys","sort","a","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","getTime","accumulated","accumulatedValues","tension","pointRadius","pointHoverRadius","err","channel","on","event","schema","table","subscribe","removeChannel","options","responsive","maintainAspectRatio","scales","x","title","display","text","ticks","maxRotation","minRotation","y","beginAtZero","stepSize","plugins","legend","position","tooltip","callbacks","context","parsed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eduar/OneDrive/Documentos/Projetos/PROJETOS/dashboard_Corazza/dashboard-supabase/src/components/Charts/SchedulesChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { supabase } from '../../services/supabase';\r\nimport { ChartData, ChartOptions } from 'chart.js';\r\n\r\ninterface ScheduleData {\r\n    created_at: string;\r\n    agendamento: number;\r\n}\r\n\r\nconst SchedulesChart: React.FC = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [period, setPeriod] = useState<'7days' | '30days' | '90days' | 'all'>('30days');\r\n    const [data, setData] = useState<ChartData<'line'>>({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Agendamentos Acumulados',\r\n                data: [],\r\n                borderColor: 'rgba(153, 102, 255, 1)',\r\n                backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                fill: true,\r\n            },\r\n        ],\r\n    });\r\n\r\n    const fetchSchedules = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            console.log('📊 Buscando dados de agendamentos...');\r\n            \r\n            // Calcular data inicial baseada no período selecionado\r\n            let startDate: Date | null = null;\r\n            const now = new Date();\r\n            \r\n            switch(period) {\r\n                case '7days':\r\n                    startDate = new Date(now.setDate(now.getDate() - 7));\r\n                    break;\r\n                case '30days':\r\n                    startDate = new Date(now.setDate(now.getDate() - 30));\r\n                    break;\r\n                case '90days':\r\n                    startDate = new Date(now.setDate(now.getDate() - 90));\r\n                    break;\r\n                case 'all':\r\n                default:\r\n                    startDate = null;\r\n                    break;\r\n            }\r\n\r\n            let query = supabase\r\n                .from('Cadastro_Clientes')\r\n                .select('created_at')\r\n                .not('agendamento', 'is', null)\r\n                .order('created_at', { ascending: true });\r\n\r\n            // Aplicar filtro de data se necessário\r\n            if (startDate) {\r\n                query = query.gte('created_at', startDate.toISOString());\r\n            }\r\n\r\n            const { data: schedules, error } = await query;\r\n\r\n            if (error) {\r\n                console.error('❌ Error fetching schedules:', error);\r\n                setError(error.message);\r\n                return;\r\n            }\r\n\r\n            console.log('✅ Dados recebidos:', schedules);\r\n\r\n            if (!schedules || schedules.length === 0) {\r\n                setData({\r\n                    labels: [],\r\n                    datasets: [{\r\n                        label: 'Agendamentos Acumulados',\r\n                        data: [],\r\n                        borderColor: 'rgba(153, 102, 255, 1)',\r\n                        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                        fill: true,\r\n                    }],\r\n                });\r\n                return;\r\n            }\r\n\r\n            // Agrupar por data e calcular acumulado\r\n            const dateMap: Record<string, number> = {};\r\n            \r\n            schedules.forEach((schedule: any) => {\r\n                const date = new Date(schedule.created_at).toLocaleDateString('pt-BR');\r\n                dateMap[date] = (dateMap[date] || 0) + 1;\r\n            });\r\n\r\n            // Ordenar as datas\r\n            const sortedDates = Object.keys(dateMap).sort((a, b) => {\r\n                const [dayA, monthA, yearA] = a.split('/').map(Number);\r\n                const [dayB, monthB, yearB] = b.split('/').map(Number);\r\n                return new Date(yearA, monthA - 1, dayA).getTime() - new Date(yearB, monthB - 1, dayB).getTime();\r\n            });\r\n\r\n            // Calcular valores acumulados\r\n            let accumulated = 0;\r\n            const accumulatedValues = sortedDates.map(date => {\r\n                accumulated += dateMap[date];\r\n                return accumulated;\r\n            });\r\n\r\n            console.log('📈 Datas:', sortedDates);\r\n            console.log('📈 Valores acumulados:', accumulatedValues);\r\n\r\n            setData({\r\n                labels: sortedDates,\r\n                datasets: [\r\n                    {\r\n                        label: 'Agendamentos Acumulados',\r\n                        data: accumulatedValues,\r\n                        borderColor: 'rgba(153, 102, 255, 1)',\r\n                        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n                        fill: true,\r\n                        tension: 0.4,\r\n                        pointRadius: 4,\r\n                        pointHoverRadius: 6,\r\n                    },\r\n                ],\r\n            });\r\n        } catch (err: any) {\r\n            console.error('❌ Erro ao processar dados:', err);\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSchedules();\r\n\r\n        // Realtime subscription com nova sintaxe do Supabase v2\r\n        const channel = supabase\r\n            .channel('schedules-changes')\r\n            .on('postgres_changes', \r\n                { event: 'INSERT', schema: 'public', table: 'Cadastro_Clientes' },\r\n                () => {\r\n                    console.log('🔄 Novo agendamento inserido, atualizando gráfico...');\r\n                    fetchSchedules();\r\n                }\r\n            )\r\n            .subscribe();\r\n\r\n        return () => {\r\n            supabase.removeChannel(channel);\r\n        };\r\n    }, [period]); // Recarrega quando o período muda\r\n\r\n    const options: ChartOptions<'line'> = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Data',\r\n                },\r\n                ticks: {\r\n                    maxRotation: 45,\r\n                    minRotation: 45\r\n                }\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Total Acumulado de Agendamentos',\r\n                },\r\n                beginAtZero: true,\r\n                ticks: {\r\n                    stepSize: 1\r\n                }\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top' as const,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Evolução de Agendamentos (Acumulado)'\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: function(context: any) {\r\n                        return `Total acumulado: ${context.parsed.y} agendamentos`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-64\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-500 mx-auto\"></div>\r\n                    <p className=\"mt-2 text-gray-600\">Carregando dados...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n                <strong className=\"font-bold\">Erro!</strong>\r\n                <span className=\"block sm:inline\"> {error}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-xl font-semibold text-gray-700\">Agendamentos ao Longo do Tempo</h2>\r\n                \r\n                {/* Seletor de Período */}\r\n                <div className=\"flex gap-2\">\r\n                    <button\r\n                        onClick={() => setPeriod('7days')}\r\n                        className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n                            period === '7days' \r\n                                ? 'bg-purple-600 text-white' \r\n                                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                        }`}\r\n                    >\r\n                        7 dias\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setPeriod('30days')}\r\n                        className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n                            period === '30days' \r\n                                ? 'bg-purple-600 text-white' \r\n                                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                        }`}\r\n                    >\r\n                        30 dias\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setPeriod('90days')}\r\n                        className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n                            period === '90days' \r\n                                ? 'bg-purple-600 text-white' \r\n                                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                        }`}\r\n                    >\r\n                        90 dias\r\n                    </button>\r\n                    <button\r\n                        onClick={() => setPeriod('all')}\r\n                        className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n                            period === 'all' \r\n                                ? 'bg-purple-600 text-white' \r\n                                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                        }`}\r\n                    >\r\n                        Tudo\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            <Line data={data} options={options} />\r\n            \r\n            {/* Informação adicional */}\r\n            {/* <div className=\"mt-4 text-sm text-gray-600\">\r\n                <p>\r\n                    <strong>Total de agendamentos no período:</strong> {' '}\r\n                    {data.datasets[0].data.length > 0 \r\n                        ? data.datasets[0].data[data.datasets[0].data.length - 1] \r\n                        : 0}\r\n                </p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SchedulesChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}