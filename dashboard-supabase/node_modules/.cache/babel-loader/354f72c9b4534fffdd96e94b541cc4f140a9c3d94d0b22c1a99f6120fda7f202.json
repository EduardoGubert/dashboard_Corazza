{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduar\\\\OneDrive\\\\Documentos\\\\Projetos\\\\PROJETOS\\\\dashboard_Corazza\\\\dashboard-supabase\\\\src\\\\components\\\\Charts\\\\SchedulesChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { supabase } from '../../services/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchedulesChart = () => {\n  _s();\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [{\n      label: 'Agendamentos',\n      data: [],\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true\n    }]\n  });\n  const fetchSchedules = async () => {\n    const {\n      data: schedules,\n      error\n    } = await supabase.from('Cadastro_Clientes').select('agendamentos, created_at').order('created_at', {\n      ascending: true\n    });\n    if (error) {\n      console.error('Error fetching schedules:', error);\n      return;\n    }\n    const labels = (schedules === null || schedules === void 0 ? void 0 : schedules.map(schedule => new Date(schedule.created_at).toLocaleString())) || [];\n    const values = (schedules === null || schedules === void 0 ? void 0 : schedules.map(schedule => schedule.agendamentos)) || [];\n    setData({\n      labels,\n      datasets: [{\n        label: 'Agendamentos',\n        data: values,\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: true\n      }]\n    });\n  };\n  useEffect(() => {\n    fetchSchedules();\n\n    // Realtime subscription com nova sintaxe do Supabase v2\n    const channel = supabase.channel('schedules-changes').on('postgres_changes', {\n      event: 'INSERT',\n      schema: 'public',\n      table: 'Cadastro_Clientes'\n    }, () => {\n      fetchSchedules();\n    }).subscribe();\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Data'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Quantidade de Agendamentos'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agendamentos em Tempo Real\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(SchedulesChart, \"OdxogzaZMYftUcKcXO08eUbKbBw=\");\n_c = SchedulesChart;\nexport default SchedulesChart;\nvar _c;\n$RefreshReg$(_c, \"SchedulesChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","supabase","jsxDEV","_jsxDEV","SchedulesChart","_s","data","setData","labels","datasets","label","borderColor","backgroundColor","fill","fetchSchedules","schedules","error","from","select","order","ascending","console","map","schedule","Date","created_at","toLocaleString","values","agendamentos","channel","on","event","schema","table","subscribe","removeChannel","options","responsive","scales","x","title","display","text","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eduar/OneDrive/Documentos/Projetos/PROJETOS/dashboard_Corazza/dashboard-supabase/src/components/Charts/SchedulesChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { supabase } from '../../services/supabase';\r\nimport { ChartData, ChartOptions } from 'chart.js';\r\n\r\ninterface ScheduleData {\r\n    created_at: string;\r\n    agendamentos: number;\r\n}\r\n\r\nconst SchedulesChart: React.FC = () => {\r\n    const [data, setData] = useState<ChartData<'line'>>({\r\n        labels: [],\r\n        datasets: [\r\n            {\r\n                label: 'Agendamentos',\r\n                data: [],\r\n                borderColor: 'rgba(75, 192, 192, 1)',\r\n                backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                fill: true,\r\n            },\r\n        ],\r\n    });\r\n\r\n    const fetchSchedules = async () => {\r\n        const { data: schedules, error } = await supabase\r\n            .from('Cadastro_Clientes')\r\n            .select('agendamentos, created_at')\r\n            .order('created_at', { ascending: true });\r\n\r\n        if (error) {\r\n            console.error('Error fetching schedules:', error);\r\n            return;\r\n        }\r\n\r\n        const labels = schedules?.map((schedule: ScheduleData) => new Date(schedule.created_at).toLocaleString()) || [];\r\n        const values = schedules?.map((schedule: ScheduleData) => schedule.agendamentos) || [];\r\n\r\n        setData({\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Agendamentos',\r\n                    data: values,\r\n                    borderColor: 'rgba(75, 192, 192, 1)',\r\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n                    fill: true,\r\n                },\r\n            ],\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSchedules();\r\n\r\n        // Realtime subscription com nova sintaxe do Supabase v2\r\n        const channel = supabase\r\n            .channel('schedules-changes')\r\n            .on('postgres_changes', \r\n                { event: 'INSERT', schema: 'public', table: 'Cadastro_Clientes' },\r\n                () => {\r\n                    fetchSchedules();\r\n                }\r\n            )\r\n            .subscribe();\r\n\r\n        return () => {\r\n            supabase.removeChannel(channel);\r\n        };\r\n    }, []);\r\n\r\n    const options: ChartOptions<'line'> = {\r\n        responsive: true,\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Data',\r\n                },\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Quantidade de Agendamentos',\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Agendamentos em Tempo Real</h2>\r\n            <Line data={data} options={options} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SchedulesChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}